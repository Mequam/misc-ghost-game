[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://cs75aey4icnad"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_4ukhb"]
parameter_name = "ShaderTime"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_srocu"]
function = 17

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_kjssk"]
function = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_0qwcc"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r3a7h"]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
global uniform float ShaderTime;



void fragment() {
// FloatParameter:2
	float n_out2p0 = ShaderTime;


// FloatFunc:3
	float n_out3p0 = fract(n_out2p0);


// Input:6
	vec2 n_out6p0 = UV;


// VectorDecompose:5
	float n_out5p0 = n_out6p0.x;
	float n_out5p1 = n_out6p0.y;


// Compare:4
	bool n_out4p0 = n_out3p0 <= n_out5p0;


// Output:0
	COLOR.rgb = vec3(n_out4p0 ? 1.0 : 0.0);


}
"
graph_offset = Vector2(-59.2675, -1.4219)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(660, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatParameter_4ukhb")
nodes/fragment/2/position = Vector2(60, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_srocu")
nodes/fragment/3/position = Vector2(280, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeCompare_kjssk")
nodes/fragment/4/position = Vector2(447, 197.5)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_0qwcc")
nodes/fragment/5/position = Vector2(220, 300)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_r3a7h")
nodes/fragment/6/position = Vector2(174.5, 342.6)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 5, 0, 4, 1, 6, 0, 5, 0, 4, 0, 0, 0)
