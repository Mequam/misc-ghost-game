[gd_resource type="VisualShader" load_steps=37 format=3 uid="uid://dhlnophyos2jw"]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_kgdaf"]
default_input_values = [1, 0.0, 2, 0.25, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ebkok"]
parameter_name = "Lifetime"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_vl0ml"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_j0wp4"]
size = Vector2(646.833, 185.327)
expression = "bit = (bitfieldExtract(floatBitsToUint(num), bit_index, 1)>uint(0));limits can be only for the slider if you add the hints \"or_greater"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_o7tok"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ip2tg"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_vnw6d"]
default_input_values = [0, 0.0, 1, 32.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7n1jt"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ns0iv"]
size = Vector2(646.833, 185.327)
expression = "bit = (bitfieldExtract(num, bit_index, 1)>uint(0));"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_43pno"]
input_name = "texture"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_loqt1"]
function = 14

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_7ybbb"]
size = Vector2(646.833, 185.327)
expression = "bit = (bitfieldExtract(num, bit_index, 1)!=0); "

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_3j4t2"]
default_input_values = [0, 0.0, 1, 65536.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2hrvs"]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_uby5o"]
function = 31

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tg0uo"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_wcj3g"]
default_input_values = [1, Vector2(1, 1), 2, Vector2(-0.5, -0.5)]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ofmmf"]
operator = 8

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_wxd2v"]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_pv6at"]
default_input_values = [1, -3.142, 2, 3.142, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_21uyf"]
source = 5

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_prdeb"]
default_input_values = [0, 0.0, 1, -0.042, 2, 1e-05]
function = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_g430w"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_dv0rf"]
function = 17

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_b7tob"]
parameter_name = "RandomTestColor"

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_diruu"]
default_input_values = [0, false, 1, Vector3(0, 0, 0), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_g4bn3"]
operator = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2y37e"]
parameter_name = "SlightDelay"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4oor8"]

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_r4q82"]
size = Vector2(315.5, 79.5)
expression = "global uniform float COOLTIME;
//global uniform int COOLTEST;"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_wv3p1"]
size = Vector2(187.5, 112.5)
expression = "time = COOLTIME;"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_qjx4j"]
parameter_name = "Start_Time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fb4qh"]
default_input_values = [0, 0.075, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fqkoq"]
input_name = "time"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_xk56p"]
default_input_values = [1, Vector2(1.226, 1), 2, Vector2(0.5, 0.5)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_m2ei3"]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
uniform float Start_Time;
uniform float SlightDelay;
uniform float Lifetime;


// GlobalExpression:0
	global uniform float COOLTIME;
	//global uniform int COOLTEST;

void fragment() {
// Input:25
	vec2 n_out25p0 = UV;


// UVFunc:26
	vec2 n_in26p1 = vec2(1.00000, 1.00000);
	vec2 n_in26p2 = vec2(-0.50000, -0.50000);
	vec2 n_out26p0 = fma(n_in26p2, n_in26p1, n_out25p0);


// VectorDecompose:28
	float n_out28p0 = vec3(n_out26p0, 0.0).x;
	float n_out28p1 = vec3(n_out26p0, 0.0).y;
	float n_out28p2 = vec3(n_out26p0, 0.0).z;


// FloatOp:27
	float n_out27p0 = atan(n_out28p1, n_out28p0);


	float n_out29p0;
// Remap:29
	float n_in29p1 = -3.14200;
	float n_in29p2 = 3.14200;
	float n_in29p3 = 0.00000;
	float n_in29p4 = 1.00000;
	{
		float __input_range = n_in29p2 - n_in29p1;
		float __output_range = n_in29p4 - n_in29p3;
		n_out29p0 = n_in29p3 + __output_range * ((n_out27p0 - n_in29p1) / __input_range);
	}


// Input:7
	float n_out7p0 = TIME;


// FloatParameter:5
	float n_out5p0 = Start_Time;


// FloatParameter:36
	float n_out36p0 = SlightDelay;


// FloatOp:35
	float n_out35p0 = n_out5p0 - n_out36p0;


// FloatOp:6
	float n_out6p0 = n_out7p0 - n_out35p0;


// FloatParameter:11
	float n_out11p0 = Lifetime;


	float n_out10p0;
// Remap:10
	float n_in10p1 = 0.00000;
	float n_in10p3 = 0.00000;
	float n_in10p4 = 1.00000;
	{
		float __input_range = n_out11p0 - n_in10p1;
		float __output_range = n_in10p4 - n_in10p3;
		n_out10p0 = n_in10p3 + __output_range * ((n_out6p0 - n_in10p1) / __input_range);
	}


// FloatOp:37
	float n_in37p1 = 0.00000;
	float n_out37p0 = n_out10p0 + n_in37p1;


// Compare:30
	bool n_out30p0 = n_out29p0 <= n_out37p0;


// Output:0
	COLOR.rgb = vec3(n_out30p0 ? 1.0 : 0.0);
	COLOR.a = (n_out30p0 ? 1.0 : 0.0);


}
"
graph_offset = Vector2(2185.19, 950.614)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2520, 600)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_43pno")
nodes/fragment/2/position = Vector2(560, 420)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_21uyf")
nodes/fragment/3/position = Vector2(800, 400)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_qjx4j")
nodes/fragment/5/position = Vector2(-100, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_fb4qh")
nodes/fragment/6/position = Vector2(280, 100)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_fqkoq")
nodes/fragment/7/position = Vector2(0, 220)
nodes/fragment/8/node = SubResource("VisualShaderNodeUVFunc_xk56p")
nodes/fragment/8/position = Vector2(600, 240)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_m2ei3")
nodes/fragment/9/position = Vector2(220, 240)
nodes/fragment/10/node = SubResource("VisualShaderNodeRemap_kgdaf")
nodes/fragment/10/position = Vector2(480, -60)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_ebkok")
nodes/fragment/11/position = Vector2(120, -60)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorDecompose_vl0ml")
nodes/fragment/12/position = Vector2(1060, 460)
nodes/fragment/13/node = SubResource("VisualShaderNodeExpression_j0wp4")
nodes/fragment/13/position = Vector2(337.358, 503.328)
nodes/fragment/13/size = Vector2(646.833, 185.327)
nodes/fragment/13/input_ports = "0,0,num;1,1,bit_index;"
nodes/fragment/13/output_ports = "0,6,bitfloatBitsToUintnum;"
nodes/fragment/13/expression = "bit = (bitfieldExtract(floatBitsToUint(num), bit_index, 1)>uint(0));limits can be only for the slider if you add the hints \"or_greater"
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_o7tok")
nodes/fragment/15/position = Vector2(-200, 600)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorDecompose_ip2tg")
nodes/fragment/16/position = Vector2(60, 620)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_vnw6d")
nodes/fragment/17/position = Vector2(229.658, 666.444)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_7n1jt")
nodes/fragment/18/position = Vector2(1100, 540)
nodes/fragment/19/node = SubResource("VisualShaderNodeExpression_ns0iv")
nodes/fragment/19/position = Vector2(400, 700)
nodes/fragment/19/size = Vector2(646.833, 185.327)
nodes/fragment/19/input_ports = "0,2,num;1,1,bit_index;"
nodes/fragment/19/output_ports = "0,6,bit;"
nodes/fragment/19/expression = "bit = (bitfieldExtract(num, bit_index, 1)>uint(0));"
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatFunc_loqt1")
nodes/fragment/20/position = Vector2(226.09, 813.912)
nodes/fragment/21/node = SubResource("VisualShaderNodeExpression_7ybbb")
nodes/fragment/21/position = Vector2(420, 860)
nodes/fragment/21/size = Vector2(646.833, 185.327)
nodes/fragment/21/input_ports = "0,1,num;1,1,bit_index;"
nodes/fragment/21/output_ports = "0,6,bit;"
nodes/fragment/21/expression = "bit = (bitfieldExtract(num, bit_index, 1)!=0); "
nodes/fragment/22/node = SubResource("VisualShaderNodeFloatOp_3j4t2")
nodes/fragment/22/position = Vector2(109.824, 876.742)
nodes/fragment/23/node = SubResource("VisualShaderNodeFloatOp_2hrvs")
nodes/fragment/23/position = Vector2(1280, 460)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatFunc_uby5o")
nodes/fragment/24/position = Vector2(1120, 380)
nodes/fragment/25/node = SubResource("VisualShaderNodeInput_tg0uo")
nodes/fragment/25/position = Vector2(1100, 620)
nodes/fragment/26/node = SubResource("VisualShaderNodeUVFunc_wcj3g")
nodes/fragment/26/position = Vector2(1360, 600)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatOp_ofmmf")
nodes/fragment/27/position = Vector2(1720, 720)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorDecompose_wxd2v")
nodes/fragment/28/position = Vector2(1540, 680)
nodes/fragment/29/node = SubResource("VisualShaderNodeRemap_pv6at")
nodes/fragment/29/position = Vector2(1868.51, 708.857)
nodes/fragment/30/node = SubResource("VisualShaderNodeCompare_prdeb")
nodes/fragment/30/position = Vector2(2020, 720)
nodes/fragment/31/node = SubResource("VisualShaderNodeFloatOp_g430w")
nodes/fragment/31/position = Vector2(1760, 860)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatFunc_dv0rf")
nodes/fragment/32/position = Vector2(2029.09, 951.386)
nodes/fragment/33/node = SubResource("VisualShaderNodeColorParameter_b7tob")
nodes/fragment/33/position = Vector2(1980, 600)
nodes/fragment/34/node = SubResource("VisualShaderNodeSwitch_diruu")
nodes/fragment/34/position = Vector2(2240, 700)
nodes/fragment/35/node = SubResource("VisualShaderNodeFloatOp_g4bn3")
nodes/fragment/35/position = Vector2(140, 100)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatParameter_2y37e")
nodes/fragment/36/position = Vector2(-220, 180)
nodes/fragment/37/node = SubResource("VisualShaderNodeFloatOp_4oor8")
nodes/fragment/37/position = Vector2(1760, 940)
nodes/fragment/38/node = SubResource("VisualShaderNodeGlobalExpression_r4q82")
nodes/fragment/38/position = Vector2(-320, 340)
nodes/fragment/38/size = Vector2(315.5, 79.5)
nodes/fragment/38/input_ports = ""
nodes/fragment/38/output_ports = ""
nodes/fragment/38/expression = "global uniform float COOLTIME;
//global uniform int COOLTEST;"
nodes/fragment/39/node = SubResource("VisualShaderNodeExpression_wv3p1")
nodes/fragment/39/position = Vector2(94.8076, 372.822)
nodes/fragment/39/size = Vector2(187.5, 112.5)
nodes/fragment/39/input_ports = ""
nodes/fragment/39/output_ports = "0,0,time;"
nodes/fragment/39/expression = "time = COOLTIME;"
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 9, 0, 8, 0, 10, 0, 8, 1, 6, 0, 10, 0, 3, 0, 12, 0, 11, 0, 10, 2, 15, 0, 16, 0, 16, 0, 17, 0, 17, 0, 13, 1, 20, 0, 19, 0, 17, 0, 19, 1, 20, 0, 21, 0, 17, 0, 21, 1, 7, 0, 6, 0, 10, 0, 22, 0, 22, 0, 20, 0, 12, 3, 23, 1, 10, 0, 24, 0, 24, 0, 23, 0, 25, 0, 26, 0, 26, 0, 28, 0, 28, 0, 27, 1, 28, 1, 27, 0, 27, 0, 29, 0, 29, 0, 30, 0, 6, 0, 31, 0, 31, 0, 32, 0, 30, 0, 34, 0, 33, 0, 34, 2, 35, 0, 6, 1, 10, 0, 37, 0, 36, 0, 35, 1, 5, 0, 35, 0, 30, 0, 0, 0, 30, 0, 0, 1, 37, 0, 30, 1)
